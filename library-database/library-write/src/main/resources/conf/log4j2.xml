<?xml version="1.0" encoding="UTF-8" ?>
<configuration status="INFO" monitorInterval="30">
	<properties>
		<property name="SERVER_NAME">library-core</property>
		<property name="SERVER_IP">${sys:serverIp}</property>
		<property name="SERVER_PORT">${sys:serverPort}</property>
		<property name="LOG_HOME">log</property>
	</properties>
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="stdout" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="%d|%p|${SERVER_IP}:${SERVER_PORT}|${SERVER_NAME}|%m|$|$|%n" />
		</console>
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="BusinessLog"
					 fileName="${LOG_HOME}/${SERVER_NAME}/${SERVER_PORT}/server.log"
					 filePattern="${LOG_HOME}/${SERVER_NAME}/${SERVER_PORT}/${date:yyyy-MM}/server-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
							 onMismatch="DENY" />
			<PatternLayout pattern="%d [%t] [%X{X-B3-TraceId},%X{X-B3-SpanId}] [%-5p] - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="300 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="100" />
		</RollingFile>
		<RollingFile name="ELKLog"
					 fileName="${LOG_HOME}/${SERVER_NAME}_elk/${SERVER_PORT}/server.log"
					 filePattern="${LOG_HOME}/${SERVER_NAME}_elk/${SERVER_PORT}/${date:yyyy-MM}/server-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
							 onMismatch="DENY" />
			<PatternLayout pattern="%d|%p|${SERVER_IP}:${SERVER_PORT}|${SERVER_NAME}|%m|$|$|%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="200 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="50" />
		</RollingFile>
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<logger name="org.springframework" level="INFO"></logger>
		<!--<logger name="org.mybatis" level="INFO"></logger> -->
		<logger name="com.opensymphony" level="ERROR"></logger>
		<logger name="org.hibernate" level="ERROR"></logger>
		<logger name="org.apache.juli.logging" level="ERROR"></logger>
		<logger name="com.netflix" level="ERROR"></logger>
		<logger name="org.quartz" level="INFO"></logger>
		<logger name="org.springframework.jdbc" level="INFO"></logger>
		<logger name="com.opensymphony.xwork2" level="OFF"></logger>
		<root level="INFO">
			<appender-ref ref="stdout" />
			<appender-ref ref="BusinessLog" />
			<appender-ref ref="ELKLog" />
		</root>
	</loggers>
</configuration>
